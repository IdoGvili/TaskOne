on:
  workflow_dispatch:
    branches:
      - master
      - develop
    inputs:
      enviro:
        type: choice
        description: environment
        options: 
          - test
          - staging
          - production

name: Create Release2

jobs:
  build:
    name: Create Release2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get latest release tag and extract version
        id: get-version
        run: |
          TAG=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/latest \
            | jq -r .tag_name)
  
          # Extract version using regular expression
          if [[ "$TAG" =~ (test|staging|production)_v([0-9]+\.[0-9]+\.[0-9]+) ]]; then
            VERSION="${BASH_REMATCH[2]}"
          else
            echo "Failed to extract version from tag: $TAG"
            exit 1
          fi
  
          echo "Latest release version is $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
  
      - name: Extract version components
        id: updated-version
        run: |
          IFS='.' read -ra version_components <<< "${{ steps.get-version.outputs.VERSION }}"
          major=${version_components[0]}
          minor=${version_components[1]}
          patch=${version_components[2]}
          if [[ $patch -eq 9 ]]; then
            patch=0
            ((minor++))
            if [[ $minor -eq 10 ]]; then
              minor=0
              ((major++))
            fi
          else
            patch=$((patch + 1))
          fi
      
          NEW_VERSION="$major.$minor.$patch"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

   
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.enviro }}_v${{ steps.updated-version.outputs.NEW_VERSION }}
          release_name: ${{ github.event.inputs.enviro }}_v${{ steps.updated-version.outputs.NEW_VERSION }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
