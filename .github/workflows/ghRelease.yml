name: "new-Release"

on:
  workflow_dispatch:
    branches:
      - master
      - develop
    inputs:
      environment:
        type: choice
        description: Environment
        options: 
          - test
          - staging
          - ALL
      version:
        description: 'Version'
        required: true
        default: '1.0'
      release_description:
        description: 'Release Description'
        required: false
        default: 'Description of the release'

jobs:
  release:
    name: Release tags

    runs-on: "ubuntu-latest"

    steps:
      - name: "Determine tag"
        id: 'tag_id'
        run: |
         TAG=${{ github.event.inputs.environment }}_v${{ github.event.inputs.version }}
         echo "TAG=$TAG" >> $GITHUB_OUTPUT
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create GitHub Release Not All
        if: ${{ github.event.inputs.environment != 'ALL' }}
        run: |
          echo ${{ steps.tag_id.outputs.TAG }}
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/IdoGvili/TaskOne/releases \
          -d '{"tag_name":"${{ steps.tag_id.outputs.TAG }}","name":"${{ steps.tag_id.outputs.TAG }}","body":"${{ steps.tag_id.outputs.TAG }} release notes :${{ steps.tag_id.outputs.TAG }} release notes :${{ github.event.inputs.release_description }}","draft":false,"prerelease":false,"generate_release_notes":false}'
    
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release All Three
        if: ${{ github.event.inputs.environment == 'ALL' }}
        run: |
          echo ${{ steps.tag_id.outputs.TAG }}
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/IdoGvili/TaskOne/releases \
          -d '{"tag_name":"test_v${{ github.event.inputs.version }}","name":"test_v${{ github.event.inputs.version }}","body":"${{ steps.tag_id.outputs.TAG }} release notes :${{ github.event.inputs.release_description }}","draft":false,"prerelease":false,"generate_release_notes":false}'
          echo ${{ steps.tag_id.outputs.TAG }}
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/IdoGvili/TaskOne/releases \
          -d '{"tag_name":"staging_v${{ github.event.inputs.version }}","name":"$staging_v${{ github.event.inputs.version }}","body":"${{ steps.tag_id.outputs.TAG }} release notes :${{ github.event.inputs.release_description }}","draft":false,"prerelease":false,"generate_release_notes":false}'
          echo ${{ steps.tag_id.outputs.TAG }}
    
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}          

      - name: Set up release data
        id: releaseData
        run: echo "::set-output name=releaseData::{\"tag_name\":\"${{ steps.tag_id.outputs.TAG }}\",\"name\":\"${{ steps.tag_id.outputs.TAG }}\",\"body\":\"${{ steps.tag_id.outputs.TAG }} release notes :${{ github.event.inputs.release_description }}\"}"
